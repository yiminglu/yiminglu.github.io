set number
set ruler
set cul
set scrolloff=5
set cmdheight=1

syntax on
colo jellybeans

set ts=4 sts=4 sw=4 et

set autoread

set autoindent
set smartindent

set list
set lcs=tab:\|\ ,nbsp:%,trail:-

set noerrorbells
set novisualbell

set complete=.,w,b,k,t,i
set completeopt=preview,menu

setlocal spell spelllang=en_us

set ignorecase
set hlsearch
set incsearch

map <S-Left> :tabp<CR>
map <S-Right> :tabn<CR>

au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

set nocompatible
set mouse=a
set autoread
set confirm
set nobackup
set noswapfile


au BufNewFile,BufRead *.md set filetype=markdown

map <F8> :call CompileAndRun()<CR>
func! CompileAndRun()
    exec "w"
    if &filetype == 'c'
        exec "!gcc % -o %< && time ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o %< && time ./%<"
    elseif &filetype == 'java'
        exec "!javac % && !time java %<"
    elseif &filetype == 'sh'
        exec "!time bash %"
    elseif &filetype == 'python'
        exec "!time python %"
    elseif &filetype == 'html'
        exec "!open -a 'Google Chrome' % &"
    elseif &filetype == 'go'
        exec "!time go run %"
    elseif &filetype == 'markdown'
        exec "!~/.vim/markdown.pl % > %.html && open -a 'Google Chrome' %.html"
    endif
endfunc


map <F5> :call RunGDB()<CR>
func! RunGDB()
    exec "w"
    if &filetype == 'c'
        exec "!gcc % -o -g %< && gdb ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o -g %< && gdb ./%<"
    endif
endfunc


execute pathogen#infect()


map <C-n> :NERDTreeToggle <CR>

let g:NERDTreeWinSize=40

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif


let g:ctrlp_working_path_mode = 'ra'

set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

